<scalastyle commentFilter="enabled">
    <name>Scalastyle configuration</name>
    <check level="error" class="org.scalastyle.file.FileTabChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.file.FileLengthChecker" enabled="true">
        <parameters>
           <parameter name="maxFileLength"><![CDATA[800]]></parameter>
        </parameters>
    </check>
    <!-- check level="warning" class="org.scalastyle.file.HeaderMatchesChecker" enabled="true">
        <parameters>
         <parameter name="header"><![CDATA[// The MIT License (MIT)
//
// Copyright (c) 2015, Blablabla
// Omnomnom.]]></parameter>
        </parameters>
    </check -->
    <check level="warning" class="org.scalastyle.scalariform.SpacesAfterPlusChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.SpaceAfterCommentStartChecker" enabled="true"></check>
    <!-- check level="warning" class="org.scalastyle.scalariform.TokenChecker" enabled="true">
        <customMessage><![CDATA[Insert at least two spaces before the comment]]></customMessage>
        <parameters>
            <parameter name="regex"><![CDATA[[^ ]{2,}\/\/]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.TokenChecker" enabled="true">
        <customMessage><![CDATA[Avoid semicolons at the end of the line]]></customMessage>
        <parameters>
            <parameter name="regex"><![CDATA[;$]]></parameter>
        </parameters>
    </check -->
    <check level="warning" class="org.scalastyle.file.WhitespaceEndOfLineChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.SpacesBeforePlusChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.file.FileLineLengthChecker" enabled="true">
        <parameters>
            <parameter name="maxLineLength"><![CDATA[160]]></parameter>
            <parameter name="tabSize"><![CDATA[4]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.ClassNamesChecker" enabled="true">
        <parameters>
            <parameter name="regex"><![CDATA[[A-Z][A-Za-z]*]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.ObjectNamesChecker" enabled="true">
        <parameters>
            <parameter name="regex"><![CDATA[[A-Z][A-Za-z]*]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.PackageObjectNamesChecker" enabled="true">
        <parameters>
            <parameter name="regex"><![CDATA[^[a-z][A-Za-z]*$]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.EqualsHashCodeChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.IllegalImportsChecker" enabled="true">
        <parameters>
            <parameter name="illegalImports"><![CDATA[sun._,java.awt._]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.ParameterNumberChecker" enabled="true">
        <parameters>
            <parameter name="maxParameters"><![CDATA[8]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.MagicNumberChecker" enabled="true">
        <parameters>
            <parameter name="ignore"><![CDATA[-1,0,1,2,3]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.NoWhitespaceBeforeLeftBracketChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.NoWhitespaceAfterLeftBracketChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.ReturnChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.NullChecker" enabled="true">
        <customMessage><![CDATA[Avoid using null. Use Option monad instead]]></customMessage>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.NoCloneChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.NoFinalizeChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.CovariantEqualsChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.StructuralTypeChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.NumberOfTypesChecker" enabled="true">
        <parameters>
            <parameter name="maxTypes"><![CDATA[30]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.CyclomaticComplexityChecker" enabled="true">
        <parameters>
            <parameter name="maximum"><![CDATA[10]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.UppercaseLChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.SimplifyBooleanExpressionChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.IfBraceChecker" enabled="false">
        <parameters>
            <parameter name="singleLineAllowed"><![CDATA[true]]></parameter>
            <parameter name="doubleLineAllowed"><![CDATA[false]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.MethodLengthChecker" enabled="true">
        <parameters>
            <parameter name="maxLength"><![CDATA[50]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.MethodNamesChecker" enabled="true">
        <parameters>
            <parameter name="regex"><![CDATA[^[a-z][A-Za-z0-9]*$]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.NumberOfMethodsInTypeChecker" enabled="true">
        <parameters>
            <parameter name="maxMethods"><![CDATA[30]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.PublicMethodsHaveTypeChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.file.NewLineAtEofChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.file.NoNewLineAtEofChecker" enabled="false"></check>
    <check level="warning" class="org.scalastyle.scalariform.WhileChecker" enabled="true">
        <customMessage><![CDATA[Avoid while. Use for/yield, map, flatMap and foreach instead]]></customMessage>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.VarFieldChecker" enabled="false"></check>
    <check level="warning" class="org.scalastyle.scalariform.VarLocalChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.RedundantIfChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.TokenChecker" enabled="true">
        <customMessage><![CDATA[Avoid println. Use logd instead]]></customMessage>
        <parameters>
            <parameter name="regex"><![CDATA[println]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.TokenChecker" enabled="true">
        <customMessage><![CDATA[Avoid casting. Use pattern matching]]></customMessage>
        <parameters>
            <parameter name="regex"><![CDATA[^[ai]sInstanceOf]]></parameter>
        </parameters>
    </check>
    <!-- check level="error" class="org.scalastyle.scalariform.TokenChecker" enabled="true">
        <customMessage><![CDATA[Never block threads with Thread.sleep. Use Future]]></customMessage>
        <parameters>
            <parameter name="regex"><![CDATA[^Thread.sleep([0-9]*)$]]></parameter>
        </parameters>
    </check -->
    <check level="error" class="org.scalastyle.scalariform.TokenChecker" enabled="true">
        <customMessage><![CDATA[Never block threads with synchronized. Use Promise or Observable instead]]></customMessage>
        <parameters>
            <parameter name="regex"><![CDATA[synchronized]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.DeprecatedJavaChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.EmptyClassChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.ClassTypeParameterChecker" enabled="true">
        <parameters>
            <parameter name="regex"><![CDATA[^[A-Z_]$]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.UnderscoreImportChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.LowercasePatternMatchChecker" enabled="true"></check>
    <check level="warning" class="org.scalastyle.scalariform.MultipleStringLiteralsChecker" enabled="true">
        <parameters>
            <parameter name="allowed"><![CDATA[2]]></parameter>
            <parameter name="ignoreRegex"><![CDATA[^""$]]></parameter>
        </parameters>
    </check>
    <check level="warning" class="org.scalastyle.scalariform.ProcedureDeclarationChecker" enabled="true">
        <customMessage><![CDATA[Use = before the method body]]></customMessage>
    </check>
</scalastyle>
